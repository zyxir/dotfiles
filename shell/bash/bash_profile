# ~/.bash_profile: Bash start-up file.
#
# Copyright 2023 Eric Zhuo Chen

# Environment variables.

# There are a lot of places to set environment variables, but by far setting
# them in .bash_profile (or .zprofile if ZSH is used) is the most consistent
# way.  It works on any distro, and works on Xorg and Wayland alike.

export COLORTERM=truecolor
export EDITOR=vim
export PATH=$HOME/.local/bin:$PATH
export GCM_CREDENTIAL_STORE=secretservice

# Setup Cargo, the Rust package manager.

if [[ -d "$HOME/.cargo" ]]; then
    export PATH=$HOME/.cargo/bin:$PATH
    if [[ -f "$HOME/.cargo/env" ]]; then
        # shellcheck disable=SC1091
        source "$HOME/.cargo/env"
    fi
fi

# Setup Coursier, the Scala application and artifact manager.

if [[ -d "$HOME/.local/share/coursier/bin" ]]; then
    export PATH=$HOME/.local/share/coursier/bin:$PATH
fi

# Setup path for self-built Python.

if [[ -d "/opt/python/" ]]; then
    for dir in /opt/python/*/bin; do
        export PATH=$dir:$PATH
    done
fi

# Setup Fcitx 5 input method.

# You can choose Fcitx 5 as the input method with im-config on Ubuntu, but it
# does not work properly: it sets GTK_IM_MODULE to fcitx instead of fcitx5,
# which causes the candidate list being placed abnormally in GTK applications
# like Firefox (maybe only when Fractional Scaling enabled).  To solve the
# problem, we have to set these environment variables explicitly to fcitx5.
#
# Besides, to start Fcitx 5 at startup, we can execute fcitx5 here, but the list
# of candidates will not show in Firefox (maybe because I'm using the snap
# version of Firefox?).  To solve that, add "Fcitx 5" to Startup Applications
# with GUI, so that it gets loaded later, which fixes my problem.

export GTK_IM_MODULE=fcitx5
export QT_IM_MODULE=fcitx5
export XMODIFIERS=@im=fcitx5

# Setup Xremap if not on SSH.

if ! { [[ -n "$SSH_CLIENT" ]] || [[ -n "$SSH_TTY" ]]; } &&
    { command -v xremap &>/dev/null; } &&
    [[ -f $HOME/.config/xremap/config.yml ]]; then
    nohup xremap "$HOME/.config/xremap/config.yml" &>/dev/null &
fi

# Setup home-manager if it exists.

if [[ -f "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh" ]]; then
    source "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
fi

# Setup Emacs editor.
if command -v emacs &> /dev/null; then
    alias ec='emacsclient -c'
    alias ecnw='emacsclient -nw'
    alias vim='emacsclient -nw'
    export EDITOR='emacsclient -nw'
    emacs-sync() {
        ZYEMACS_SYNC_LEVEL="$1" emacs --batch --load "$HOME/.emacs.d/zy-sync.el"
    }
fi

# Setup Direnv.
if command -v direnv &> /dev/null; then
    eval "$(direnv hook bash)"
fi

# Run bashrc if it exists

if [[ -f "$HOME/.bashrc" ]]; then
    # shellcheck disable=SC1091
    source "$HOME/.bashrc"
fi

# Run machine-specific script if it exists

if [[ -f "$HOME/.bash_local" ]]; then
    # shellcheck disable=SC1091
    source "$HOME/.bash_local"
fi

# Local Variables:
# mode: sh
# flycheck-shellcheck-follow-sources: nil
# End:
